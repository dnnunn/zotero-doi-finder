--- a/src/index.ts
+++ b/src/index.ts
@@ -315,7 +315,7 @@
   return foundAbstract;
 }
 
-async function processItems(items: any[]): Promise<{ foundDOIs: number; foundAbstracts: number; total: number }> {
+async function processItems(items: any[], alreadyComplete: { withDOI: number; withAbstract: number; totalRegular: number }): Promise<{ foundDOIs: number; foundAbstracts: number; total: number }> {
   // Create progress window
   const progressWin = new Zotero.ProgressWindow({
     closeOnClick: false
@@ -323,7 +323,8 @@
   progressWin.changeHeadline(getString("findDOI.progress.title") || "Finding DOIs and Abstracts");
   
   // Create progress indicator
-  const progressText = getString("findDOI.progress.processing") || "Processing items...";
+  const initialText = `Processing ${items.length} items (${alreadyComplete.withDOI} of ${alreadyComplete.totalRegular} already have DOIs, ${alreadyComplete.withAbstract} have abstracts)`;
+  const progressText = getString("findDOI.progress.processing") || initialText;
   const icon = "chrome://zotero/skin/16/universal/book.svg";
   progressWin.addLines(progressText, icon);
   
@@ -401,14 +402,31 @@
 
   Zotero.debug(`DOI Finder: Processing ${items.length} total items`);
 
+  // Count items with DOIs and abstracts before filtering
+  let totalRegularItems = 0;
+  let itemsWithDOI = 0;
+  let itemsWithAbstract = 0;
+  
+  items.forEach((item: any) => {
+    if (item.isRegularItem()) {
+      totalRegularItems++;
+      const doi = item.getField('DOI');
+      const abstract = item.getField('abstractNote');
+      
+      if (doi && doi.trim() !== '' && doi.trim() !== '-') {
+        itemsWithDOI++;
+      }
+      if (abstract && abstract.trim() !== '') {
+        itemsWithAbstract++;
+      }
+    }
+  });
 
   const itemsToProcess = items.filter((item: any) => {
     if (!item.isRegularItem()) return false;
@@ -428,7 +446,12 @@
     return;
   }
 
-  const result = await processItems(itemsToProcess);
+  const result = await processItems(itemsToProcess, {
+    withDOI: itemsWithDOI,
+    withAbstract: itemsWithAbstract,
+    totalRegular: totalRegularItems
+  });
 
   // Create a more detailed completion message
   let message = `Found ${result.foundDOIs} new DOIs and ${result.foundAbstracts} abstracts for ${result.total} items processed.`;
